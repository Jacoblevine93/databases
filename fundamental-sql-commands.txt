1. List the commands for adding, updating, and deleting data.

A: INSERT INTO, UPDATE, DELETE

2. Explain the structure for each type of command.

A: 

INSERT INTO lists the table to insert into and the values to be inserted. 
UPDATE lists the table to change followed by the SET command and any WHERE clauses. DELETE is followed by FROM and a WHERE clause. 

3. What are some of the data types that can be used in tables? Give a real-world example of each type.

A: 

Numeric: 5.23
Integer: 42424
Date: 10/13/1993

4. Decide how to create a new table to hold a list of people invited to a wedding dinner. The table needs to have first and last names, whether they sent in their RSVP, the number of guests they are bringing, and the number of meals (1 for adults and 1/2 for children).

	- Which data type would you use to store each of the following pieces of information?
		- First and last name.
		- Whether they sent in their RSVP.
		- Number of guests.
		- Number of meals.

	A: text, text, integer, integer

	- Write a command that creates the table to track the wedding dinner.

	A: 

	CREATE TABLE dinner (
		firstname text,
		lastname  text,
		guests integer,
		meals integer,
		rsvp boolean,
	);

	- Write a command that adds a column to track whether the guest sent a thank you card.

	A: ALTER TABLE dinner ADD COLUMN thank you boolean;

	- You have decided to move the data about the meals to another table, so write a command to remove the column storing the number meals from the wedding table.

	A: ALTER TABLE dinner DROP COLUMN meals;

	- The guests will need a place to sit at the reception, so write a command that adds a column for table number.

	A: ALTER TABLE dinner ADD COLUMN tablenumber integer;

	- The wedding is over and we do not need to keep this information, so write a command that deletes the table numbers from the database.

	A: ALTER TABLE dinner DROP COLUMN tablenumber;

5. Write a command to create a new table to hold the books in a library with the columns ISBN, title, author, genre, publishing date, number of copies, and available copies.

	A: CREATE TABLE library (
		ISBN integer,
		title text,
		author text,
		genre text,
		publishing_date date,
		number_of_copies integer,
		available_copies integer
	);

	- Find three books and add their information to the table.

	A: INSERT INTO library (ISBN, title, author, genre, publishing_date, number_of_copies, available_copies)
	VALUES 
	(1111111, Title1, Author1, Comedy, 01/02/93, 5, 3);
	(1111112, Title2, Author2, Mystery, 05/03/18, 4, 2);
	(1111113, Title3, Author3, Horror, 09/08/98, 5, 1);

	- Someone has just checked out one of the books. Change the number of available copies to 1 fewer.

	A: UPDATE library SET available_copies=3 WHERE title=title1;

	- Now one of the books has been added to the banned books list. Remove it from the table.

	A: DELETE FROM library where ISBN=1111111;

6. Write a command to make a new table to hold spacecrafts. Information should include id, name, year launched, country of origin, a brief description of the mission, orbiting body, if it is currently operating, and its approximate miles from Earth. In addition to the table creation, provide commands that perform the following operations:

	A: CREATE TABLE spacecrafts (
		id integer,
		name text,
		year_launched integer,
		country text,
		mission text,
		orbiting_body text,	
		operating boolean,
		miles_from_earth integer
	);

	- Add three non-Earth-orbiting satellites to the table.

	A: INSERT INTO spacecrafts(id,name,year_launched,country,mission,orbiting_body,operating,miles_from_earth)
	VALUES
	(1,'SpaceX',1998,'USA','Go to Moon', 'Moon', 'yes', 2000)
	(2,'Destroyer',2018,'France','Orbit Saturn', 'Saturn', 'yes', 8000)
	(3,'RedDawn',2004,'China','Go to Moon', 'Moon', 'no', 2008) 


	- Remove one of the satellites from the table since it has just crashed into the planet.

	A: DELETE FROM spacecrafts where id=1;

	- Edit another satellite because it is no longer operating and change the value to reflect that.

	A: UPDATE spacecrafts SET operational='no' WHERE id=2;


7. Write a command to create a new table to hold the emails in your inbox. This table should include an id, the subject line, the sender, any additional recipients, the body of the email, the timestamp, whether or not you have read the email, and the id of the email chain it's in. Also provide commands that perform the following operations:

	A: CREATE TABLE emails (
		id integer,
		subject text,
		sender text,
		other_recipients text,
		body text,
		timestamp timestamp,
		read boolean,
		email_chain_id integer	
	);

	- Add three new emails to the inbox.

	A: INSERT TO emails (id,subject,sender,other_recipients,body,timestamp,read,e-mail_chain_id)
	VALUES
	(1,'Dinner', 'Margaret','none', "Want to have dinner?", TIMESTAMP '2013-03-13 19:06:00', 'y', '1001')
	(2,'Movies', 'Bethany','none', "What are you doing tonight?", TIMESTAMP '2018-06-15 15:03:00', 'n', '1002')
	(3,'Surfing', 'James','none', "What are you doing Saturday?", TIMESTAMP '2018-03-16 14:07:00', 'n', '1003')

	- You deleted one of the emails, so write a command to remove the row from the inbox table.

	A: DELETE FROM emails WHERE id=1;

	- You started reading an email but just heard a crash in another room. Mark the email as unread before investigating the crash, so you can come back and read it later.

	A: UPDATE emails SET read='y' WHERE id=3;